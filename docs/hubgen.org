#+TITLE: HubGen Notes
#+AUTHOR: Calvin Beck
#+OPTIONS: ^:{}

* Introduction
  HubGen is a C program designed to generate Arduino programs for
  ".mux" (see the MuxParse library) networks. The basic idea is that
  the ".mux" file describes the network - how you want to map inputs
  and outputs on an Arduino, we take this information, and generate an
  Arduino program which maps those inputs to outputs. Each input is
  read, and that value contributes to the output as described in the
  MuxDuino library.

* Usage
  In order to use HubGen after it has been installed the only thing
  you need to know is:

  #+BEGIN_EXAMPLE
    $ hubgen <input filename> <output filename> [-v]
  #+END_EXAMPLE

  Where *<input filename>* and *<output filename>* are replaced by the
  path to your input ".mux" file, and the path to the Arduino C++ file
  that you want to output respectively. This C++ file relies upon the
  MuxDuino library, but otherwise it should just compile and be
  completely ready for use on an Arduino. You may want to modify this
  file some if you want to do anything special - like perhaps flip the
  channel of an output depending on a pin value.

  This program will also print warnings to stderr if the pipes
  described in the mux file are invalid. Such as if one of them has
  the same input and output, or if an input was previously declared as
  an output and vice versa. The file will still be written, but
  MuxDuino will have problems with these pipes.

  If the optional *-v* argument is used then the HubGen program will
  spit out Arduino C++ code which uses the serial port to print
  additional information. This will print things like errors that
  occured when registering MuxDuino pipes, and the values written to
  ouput pins in the network. Note that if this option is used the
  serial pins, 0 and 1, must be free and not used in the network!

* Current Limitations
  HubGen is currently not able to do some of the following things,
  which might be useful in the future:

  - Utilize channels in a reasonable manner. The first channel
    assigned to an output in the file is the only channel the output
    will use in the Arduino program.
  - We can't check for pin numbers being out of range unfortunately
    because different Arduinos have different pins.
  - There is currently no way to use custom loop() functions for the
    generated Arduino code. This might be useful again for things like
    switching output channels, printing debug information. It may be
    best to just edit these after the fact in the long run anyway.

* Other Possible Features
  - ".dot" file generation for the networks might actually be useful
    for debugging networks. It may provide a useful visualization.

